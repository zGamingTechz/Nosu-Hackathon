{"ast":null,"code":"var _jsxFileName = \"/Users/leochin/Documents/Hackathon/AI Gf/chatbot-mood/src/components/Mood.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport angryImg from \"./assets/angry.png\";\nimport annoyedImg from \"./assets/annoyed.png\";\nimport happyImg from \"./assets/happy.png\";\nimport idleImg from \"./assets/idle.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mood = () => {\n  _s();\n  const [mood, setMood] = useState(\"idle\");\n\n  // Mood to image map\n  const moodImages = {\n    angry: angryImg,\n    annoyed: annoyedImg,\n    happy: happyImg,\n    idle: idleImg\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot Mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: moodImages[mood],\n      alt: mood,\n      style: {\n        width: \"200px\",\n        height: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMood(\"angry\"),\n        children: \"Angry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMood(\"annoyed\"),\n        children: \"Annoyed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMood(\"happy\"),\n        children: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMood(\"idle\"),\n        children: \"Idle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Mood, \"mlZQkDJ2DHYqE7QQINlKf69PAHE=\");\n_c = Mood;\nexport default Mood;\nvar _c;\n$RefreshReg$(_c, \"Mood\");","map":{"version":3,"names":["React","useState","angryImg","annoyedImg","happyImg","idleImg","jsxDEV","_jsxDEV","Mood","_s","mood","setMood","moodImages","angry","annoyed","happy","idle","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/leochin/Documents/Hackathon/AI Gf/chatbot-mood/src/components/Mood.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport angryImg from \"./assets/angry.png\";\nimport annoyedImg from \"./assets/annoyed.png\";\nimport happyImg from \"./assets/happy.png\";\nimport idleImg from \"./assets/idle.png\";\n\nconst Mood = () => {\n  const [mood, setMood] = useState(\"idle\");\n\n  // Mood to image map\n  const moodImages = {\n    angry: angryImg,\n    annoyed: annoyedImg,\n    happy: happyImg,\n    idle: idleImg,\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>Chatbot Mood</h1>\n      <img\n        src={moodImages[mood]}\n        alt={mood}\n        style={{ width: \"200px\", height: \"200px\" }}\n      />\n      <div style={{ marginTop: \"20px\" }}>\n        <button onClick={() => setMood(\"angry\")}>Angry</button>\n        <button onClick={() => setMood(\"annoyed\")}>Annoyed</button>\n        <button onClick={() => setMood(\"happy\")}>Happy</button>\n        <button onClick={() => setMood(\"idle\")}>Idle</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Mood;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;;EAExC;EACA,MAAMW,UAAU,GAAG;IACjBC,KAAK,EAAEX,QAAQ;IACfY,OAAO,EAAEX,UAAU;IACnBY,KAAK,EAAEX,QAAQ;IACfY,IAAI,EAAEX;EACR,CAAC;EAED,oBACEE,OAAA;IAAKU,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MACEkB,GAAG,EAAEb,UAAU,CAACF,IAAI,CAAE;MACtBgB,GAAG,EAAEhB,IAAK;MACVO,KAAK,EAAE;QAAEU,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFjB,OAAA;MAAKU,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAChCb,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMlB,OAAO,CAAC,OAAO,CAAE;QAAAS,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDjB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMlB,OAAO,CAAC,SAAS,CAAE;QAAAS,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DjB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMlB,OAAO,CAAC,OAAO,CAAE;QAAAS,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDjB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMlB,OAAO,CAAC,MAAM,CAAE;QAAAS,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}