{"ast":null,"code":"var _jsxFileName = \"/Users/leochin/Documents/Hackathon/AI Gf/chatbot-mood/src/components/Mood.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport angryImg from \"../media/angry.png\";\nimport annoyedImg from \"../media/annoyed.png\";\nimport happyImg from \"../media/happy.png\";\nimport idleImg from \"../media/idle.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mood = () => {\n  _s();\n  const [mood, setMood] = useState(\"idle\");\n  const [input, setInput] = useState(\"\");\n\n  // Mood to image map\n  const moodImages = {\n    angry: angryImg,\n    annoyed: annoyedImg,\n    happy: happyImg,\n    idle: idleImg\n  };\n\n  // Handler for user input\n  const handleInputChange = event => {\n    setInput(event.target.value.toLowerCase());\n  };\n\n  // Handler for form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (moodImages[input]) {\n      setMood(input); // Update mood if input matches\n    } else {\n      setMood(\"idle\"); // Default to \"idle\" if no match\n    }\n    setInput(\"\"); // Clear the input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot Mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: moodImages[mood],\n      alt: mood,\n      style: {\n        width: \"200px\",\n        height: \"200px\",\n        borderRadius: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type mood (e.g., angry, happy)\",\n        value: input,\n        onChange: handleInputChange,\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          width: \"300px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Mood, \"PZ4y+7mJiFyZQ/NAO6g+7C1P4yg=\");\n_c = Mood;\nexport default Mood;\nvar _c;\n$RefreshReg$(_c, \"Mood\");","map":{"version":3,"names":["React","useState","angryImg","annoyedImg","happyImg","idleImg","jsxDEV","_jsxDEV","Mood","_s","mood","setMood","input","setInput","moodImages","angry","annoyed","happy","idle","handleInputChange","event","target","value","toLowerCase","handleSubmit","preventDefault","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","borderRadius","onSubmit","type","placeholder","onChange","padding","fontSize","marginRight","_c","$RefreshReg$"],"sources":["/Users/leochin/Documents/Hackathon/AI Gf/chatbot-mood/src/components/Mood.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport angryImg from \"../media/angry.png\";\nimport annoyedImg from \"../media/annoyed.png\";\nimport happyImg from \"../media/happy.png\";\nimport idleImg from \"../media/idle.png\";\n\nconst Mood = () => {\n  const [mood, setMood] = useState(\"idle\");\n  const [input, setInput] = useState(\"\");\n\n  // Mood to image map\n  const moodImages = {\n    angry: angryImg,\n    annoyed: annoyedImg,\n    happy: happyImg,\n    idle: idleImg,\n  };\n\n  // Handler for user input\n  const handleInputChange = (event) => {\n    setInput(event.target.value.toLowerCase());\n  };\n\n  // Handler for form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (moodImages[input]) {\n      setMood(input); // Update mood if input matches\n    } else {\n      setMood(\"idle\"); // Default to \"idle\" if no match\n    }\n    setInput(\"\"); // Clear the input field\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>Chatbot Mood</h1>\n      <img\n        src={moodImages[mood]}\n        alt={mood}\n        style={{ width: \"200px\", height: \"200px\", borderRadius: \"10px\" }}\n      />\n      <form onSubmit={handleSubmit} style={{ marginTop: \"20px\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Type mood (e.g., angry, happy)\"\n          value={input}\n          onChange={handleInputChange}\n          style={{\n            padding: \"10px\",\n            fontSize: \"16px\",\n            width: \"300px\",\n            marginRight: \"10px\",\n          }}\n        />\n        <button type=\"submit\" style={{ padding: \"10px 20px\", fontSize: \"16px\" }}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Mood;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMa,UAAU,GAAG;IACjBC,KAAK,EAAEb,QAAQ;IACfc,OAAO,EAAEb,UAAU;IACnBc,KAAK,EAAEb,QAAQ;IACfc,IAAI,EAAEb;EACR,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAIC,KAAK,IAAK;IACnCP,QAAQ,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB,IAAIX,UAAU,CAACF,KAAK,CAAC,EAAE;MACrBD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACnB;IACAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA;IAAKmB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDtB,OAAA;MAAAsB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB1B,OAAA;MACE2B,GAAG,EAAEpB,UAAU,CAACJ,IAAI,CAAE;MACtByB,GAAG,EAAEzB,IAAK;MACVgB,KAAK,EAAE;QAAEU,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACF1B,OAAA;MAAMgC,QAAQ,EAAEf,YAAa;MAACE,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,gBACzDtB,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gCAAgC;QAC5CnB,KAAK,EAAEV,KAAM;QACb8B,QAAQ,EAAEvB,iBAAkB;QAC5BO,KAAK,EAAE;UACLiB,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBR,KAAK,EAAE,OAAO;UACdS,WAAW,EAAE;QACf;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF1B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAACd,KAAK,EAAE;UAAEiB,OAAO,EAAE,WAAW;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAf,QAAA,EAAC;MAEzE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CAvDID,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAyDV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}